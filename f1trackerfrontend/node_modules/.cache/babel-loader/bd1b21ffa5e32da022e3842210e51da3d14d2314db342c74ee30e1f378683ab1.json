{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\IdeaProjects\\\\f1trackerfrontend\\\\src\\\\components\\\\select\\\\SelectSceleton.tsx\";\nimport React, { Component } from 'react';\nimport F1InfoAPI from \"../../API/InfoAPI\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SelectSceleton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null,\n      driverOptions: [] // Store the driver options here\n    };\n  }\n\n  async componentDidMount() {\n    const options = new F1InfoAPI();\n    try {\n      const driverData = await options.Drivers(\"f1/info/drivers\");\n      // Convert driver data to the format expected by Select component\n      const driverOptions = driverData.map(driver => ({\n        value: driver.id,\n        // Replace with the actual property for driver ID\n        label: driver.name // Replace with the actual property for driver name\n      }));\n\n      this.setState({\n        driverOptions\n      });\n    } catch (error) {\n      // Handle errors here\n    }\n  }\n  render() {\n    const {\n      selectedOption,\n      driverOptions\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedOption\n      // onChange={this.handleChange}\n      ,\n      options: driverOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default SelectSceleton;","map":{"version":3,"names":["React","Component","F1InfoAPI","Select","jsxDEV","_jsxDEV","SelectSceleton","constructor","args","state","selectedOption","driverOptions","componentDidMount","options","driverData","Drivers","map","driver","value","id","label","name","setState","error","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/User/IdeaProjects/f1trackerfrontend/src/components/select/SelectSceleton.tsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport F1InfoAPI from \"../../API/InfoAPI\";\r\nimport Select from 'react-select';\r\n\r\nclass SelectSceleton extends Component<any> {\r\n    state = {\r\n        selectedOption: null,\r\n        driverOptions: [], // Store the driver options here\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const options = new F1InfoAPI();\r\n        try {\r\n            const driverData = await options.Drivers(\"f1/info/drivers\");\r\n            // Convert driver data to the format expected by Select component\r\n            const driverOptions = driverData.map(driver => ({\r\n                value: driver.id, // Replace with the actual property for driver ID\r\n                label: driver.name, // Replace with the actual property for driver name\r\n            }));\r\n            this.setState({ driverOptions });\r\n        } catch (error) {\r\n            // Handle errors here\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { selectedOption, driverOptions } = this.state;\r\n\r\n        return (\r\n            <Select\r\n                value={selectedOption}\r\n                // onChange={this.handleChange}\r\n                options={driverOptions}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectSceleton;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,SAASL,SAAS,CAAM;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACxCC,KAAK,GAAG;MACJC,cAAc,EAAE,IAAI;MACpBC,aAAa,EAAE,EAAE,CAAE;IACvB,CAAC;EAAA;;EAED,MAAMC,iBAAiBA,CAAA,EAAG;IACtB,MAAMC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC;IAC/B,IAAI;MACA,MAAMY,UAAU,GAAG,MAAMD,OAAO,CAACE,OAAO,CAAC,iBAAiB,CAAC;MAC3D;MACA,MAAMJ,aAAa,GAAGG,UAAU,CAACE,GAAG,CAACC,MAAM,KAAK;QAC5CC,KAAK,EAAED,MAAM,CAACE,EAAE;QAAE;QAClBC,KAAK,EAAEH,MAAM,CAACI,IAAI,CAAE;MACxB,CAAC,CAAC,CAAC;;MACH,IAAI,CAACC,QAAQ,CAAC;QAAEX;MAAc,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZ;IAAA;EAER;EAEAC,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEd,cAAc;MAAEC;IAAc,CAAC,GAAG,IAAI,CAACF,KAAK;IAEpD,oBACIJ,OAAA,CAACF,MAAM;MACHe,KAAK,EAAER;MACP;MAAA;MACAG,OAAO,EAAEF;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;AACJ;AAEA,eAAetB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}