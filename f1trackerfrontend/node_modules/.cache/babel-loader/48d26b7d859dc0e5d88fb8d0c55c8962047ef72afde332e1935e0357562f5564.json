{"ast":null,"code":"export default class ResultsAPI {\n  async Recent() {\n    const result = fetch(\"http://ergast.com/api/f1/current/last/results.json\").then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json().then(value => {\n        return value.MRData.RaceTable.Races.Results;\n      });\n    });\n    var listtoreturn = [];\n    var season = \"\";\n    var location = \"\";\n    var date = \"\";\n    var time = \"\";\n    result.then(resultvalue => {\n      setTimeout(() => {\n        resultvalue.map(elem => {\n          season = resultvalue.season;\n          console.log(resultvalue);\n          location = resultvalue.Circuit.Location.locality + \" \" + resultvalue.Circuit.Location.country;\n          date = resultvalue.date;\n          time = resultvalue.time;\n          listtoreturn.push({\n            number: elem.number,\n            position: elem.position,\n            points: elem.points,\n            driver: elem.Driver.givenName + \" \" + elem.Driver.familyName,\n            constructor: elem.Constructor.name,\n            fastesttime: elem.FastestLap.Time.time,\n            averspeed: elem.FastestLap.AverageSpeed.speed\n          });\n        });\n        listtoreturn.push({\n          season: season,\n          location: location,\n          date: date,\n          time: time\n        });\n      }, 500);\n    });\n    return listtoreturn;\n  }\n}\n;","map":{"version":3,"names":["ResultsAPI","Recent","result","fetch","then","response","ok","Error","statusText","json","value","MRData","RaceTable","Races","Results","listtoreturn","season","location","date","time","resultvalue","setTimeout","map","elem","console","log","Circuit","Location","locality","country","push","number","position","points","driver","Driver","givenName","familyName","constructor","Constructor","name","fastesttime","FastestLap","Time","averspeed","AverageSpeed","speed"],"sources":["C:/Users/User/IdeaProjects/F1TrackerServer/f1trackerfrontend/src/API/ResultsAPI.tsx"],"sourcesContent":["export default class  ResultsAPI{\r\n    async Recent(): Promise<any[]> {\r\n        const result = fetch(\"http://ergast.com/api/f1/current/last/results.json\").then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.MRData.RaceTable.Races.Results;\r\n            })\r\n        })\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{resultvalue.map((elem: any)=> {\r\n                season = resultvalue.season\r\n                console.log(resultvalue)\r\n                location = resultvalue.Circuit.Location.locality + \" \" + resultvalue.Circuit.Location.country\r\n                date = resultvalue.date\r\n                time = resultvalue.time\r\n                listtoreturn.push({number: elem.number, position: elem.position, points: elem.points,\r\n                 driver: elem.Driver.givenName + \" \" + elem.Driver.familyName, constructor: elem.Constructor.name,\r\n                 fastesttime: elem.FastestLap.Time.time, averspeed: elem.FastestLap.AverageSpeed.speed\r\n                })})\r\n                listtoreturn.push({season: season, location: location, date: date, time: time})\r\n            ;}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n};"],"mappings":"AAAA,eAAe,MAAOA,UAAU;EAC5B,MAAMC,MAAMA,CAAA,EAAmB;IAC3B,MAAMC,MAAM,GAAGC,KAAK,CAAC,oDAAoD,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACxF,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACF,QAAQ,CAACG,UAAU,CAAC;MACxC;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAAEM,KAAK,IAAK;QACnC,OAAOA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,KAAK,CAACC,OAAO;MAC/C,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAIC,YAAmB,GAAE,EAAE;IAC3B,IAAIC,MAAc,GAAG,EAAE;IACvB,IAAIC,QAAgB,GAAG,EAAE;IACzB,IAAIC,IAAY,GAAG,EAAE;IACrB,IAAIC,IAAY,GAAG,EAAE;IACrBjB,MAAM,CAACE,IAAI,CAAEgB,WAAW,IAAI;MACxBC,UAAU,CAAC,MAAI;QAACD,WAAW,CAACE,GAAG,CAAEC,IAAS,IAAI;UAC1CP,MAAM,GAAGI,WAAW,CAACJ,MAAM;UAC3BQ,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;UACxBH,QAAQ,GAAGG,WAAW,CAACM,OAAO,CAACC,QAAQ,CAACC,QAAQ,GAAG,GAAG,GAAGR,WAAW,CAACM,OAAO,CAACC,QAAQ,CAACE,OAAO;UAC7FX,IAAI,GAAGE,WAAW,CAACF,IAAI;UACvBC,IAAI,GAAGC,WAAW,CAACD,IAAI;UACvBJ,YAAY,CAACe,IAAI,CAAC;YAACC,MAAM,EAAER,IAAI,CAACQ,MAAM;YAAEC,QAAQ,EAAET,IAAI,CAACS,QAAQ;YAAEC,MAAM,EAAEV,IAAI,CAACU,MAAM;YACnFC,MAAM,EAAEX,IAAI,CAACY,MAAM,CAACC,SAAS,GAAG,GAAG,GAAGb,IAAI,CAACY,MAAM,CAACE,UAAU;YAAEC,WAAW,EAAEf,IAAI,CAACgB,WAAW,CAACC,IAAI;YAChGC,WAAW,EAAElB,IAAI,CAACmB,UAAU,CAACC,IAAI,CAACxB,IAAI;YAAEyB,SAAS,EAAErB,IAAI,CAACmB,UAAU,CAACG,YAAY,CAACC;UACjF,CAAC,CAAC;QAAA,CAAC,CAAC;QACJ/B,YAAY,CAACe,IAAI,CAAC;UAACd,MAAM,EAAEA,MAAM;UAAEC,QAAQ,EAAEA,QAAQ;UAAEC,IAAI,EAAEA,IAAI;UAAEC,IAAI,EAAEA;QAAI,CAAC,CAAC;MAClF,CAAC,EAAE,GAAG,CAAC;IACZ,CAAC,CAAC;IACF,OAAOJ,YAAY;EAEvB;AACJ;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}