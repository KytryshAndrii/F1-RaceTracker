[{"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\index.tsx":"1","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\App.tsx":"2","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanel.tsx":"3","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectSceleton.tsx":"4","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\InfoAPI.tsx":"5","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\ResultsAPI.tsx":"6","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\loader\\Loader.tsx":"7","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanelPage.tsx":"8","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\RecentResults.tsx":"9"},{"size":600,"mtime":1699266840526,"results":"10","hashOfConfig":"11"},{"size":1190,"mtime":1699267554233,"results":"12","hashOfConfig":"11"},{"size":3225,"mtime":1699267503417,"results":"13","hashOfConfig":"11"},{"size":1121,"mtime":1698612940123,"results":"14","hashOfConfig":"11"},{"size":3361,"mtime":1698772773655,"results":"15","hashOfConfig":"11"},{"size":2016,"mtime":1699218556290,"results":"16","hashOfConfig":"11"},{"size":377,"mtime":1699266719451,"results":"17","hashOfConfig":"11"},{"size":1059,"mtime":1699267554248,"results":"18","hashOfConfig":"11"},{"size":3058,"mtime":1699267503387,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hijzzy",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\index.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\App.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanel.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectSceleton.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\InfoAPI.tsx",["49","50","51","52"],[],"export default class  F1InfoAPI{\r\n\r\n     async Drivers(): Promise<any[]> {\r\n        const result = fetch(\"http://localhost:8080/f1/info/drivers\").then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n                return response.json().then((value) => {\r\n                    return value.MRData.DriverTable.Drivers;\r\n                })\r\n            })\r\n        var listtoreturn: any[]= []\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.driverId, label:elem.givenName + \" \" + elem.familyName})\r\n            });}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n\r\n    async Rounds(year: string): Promise<number>{\r\n         const result = fetch(\"http://localhost:8080/f1/info/rounds?year=\" + year).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value;\r\n            })\r\n        })\r\n        var toreturn: number = 0;\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{\r\n                toreturn = resultvalue\r\n            }, 500)\r\n        })\r\n        return toreturn\r\n    }\r\n\r\n    async Constructor(driver: string): Promise<any[]> {\r\n        const result = fetch(\"http://localhost:8080/f1/info/constructors?driver=\"+ driver).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Constructors;\r\n            })\r\n        })\r\n        var listtoreturn: any[]= []\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.constructorId, label:elem.name , nation: elem.nationality})\r\n            });}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n\r\n    async ConstructorByDate(year: number): Promise<any[]> {\r\n        const result = fetch(\"http://localhost:8080/f1/info/bydateconstructors?year=\"+ year).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Constructors;\r\n            })\r\n        })\r\n        var listtoreturn: any[]= []\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.constructorId, label:elem.name , nation: elem.nationality})\r\n            });}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n\r\n    async YearsList(): Promise<any[]>{\r\n        var listtoreturn: any[] = []\r\n        const result = fetch(\"http://localhost:8080/f1/info/yearlist\").then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n        })\r\n        result.then((resultvalue) =>{\r\n            setTimeout(()=>{resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem, label:elem.toString().toLocaleUpperCase()})\r\n            });}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n\r\n\r\n};","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\ResultsAPI.tsx",["53"],[],"export default class  ResultsAPI{\r\n    async Recent(): Promise<any[]> {\r\n        const result = fetch(\"http://ergast.com/api/f1/current/last/results.json\").then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.MRData.RaceTable.Races[0];\r\n            })\r\n        })\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        result.then((resultvalue) =>{\r\n            season = resultvalue.season\r\n            location = resultvalue.Circuit.Location.locality + \" - \" + resultvalue.Circuit.Location.country\r\n            date = resultvalue.date\r\n            time = resultvalue.time.slice(0, -1)\r\n            setTimeout(()=>{resultvalue.Results.map((elem: any)=> {\r\n                if(elem.FastestLap){\r\n                    listtoreturn.push(\r\n                        {number: elem.number, position: elem.position, points: elem.points,\r\n                         driver: elem.Driver.givenName + \" \" + elem.Driver.familyName, constructor: elem.Constructor.name,\r\n                         status: elem.status, url: elem.Driver.url,\r\n                         fastesttime: elem.FastestLap.Time.time, averspeed: elem.FastestLap.AverageSpeed.speed\r\n                        })\r\n                }else{\r\n                    listtoreturn.push(\r\n                        {number: elem.number, position: elem.position, points: elem.points,\r\n                         driver: elem.Driver.givenName + \" \" + elem.Driver.familyName, constructor: elem.Constructor.name,\r\n                         status: elem.status, url: elem.Driver.url\r\n                        })\r\n                }\r\n            })\r\n                listtoreturn.push({season: season, location: location, date: date, time: time})\r\n            ;}, 500)\r\n        })\r\n        return listtoreturn\r\n\r\n    }\r\n};","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\loader\\Loader.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanelPage.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\RecentResults.tsx",[],[],{"ruleId":"54","severity":1,"message":"55","line":14,"column":56,"nodeType":"56","messageId":"57","endLine":14,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":51,"column":56,"nodeType":"56","messageId":"57","endLine":51,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":70,"column":56,"nodeType":"56","messageId":"57","endLine":70,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":87,"column":56,"nodeType":"56","messageId":"57","endLine":87,"endColumn":58},{"ruleId":"54","severity":1,"message":"55","line":21,"column":64,"nodeType":"56","messageId":"57","endLine":21,"endColumn":66},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]