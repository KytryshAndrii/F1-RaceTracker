[{"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\index.tsx":"1","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\App.tsx":"2","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanel.tsx":"3","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectSceleton.tsx":"4","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\InfoAPI.tsx":"5","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\ResultsAPI.tsx":"6","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\loader\\Loader.tsx":"7","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanelPage.tsx":"8","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\RecentResults.tsx":"9","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\YearRoundResults.tsx":"10","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\YearDriverResults.tsx":"11","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\ConstructorDriverResults.tsx":"12","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\FastestResult.tsx":"13","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\navigate\\NavBar.tsx":"14","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\buttons\\ButtonsPanel.tsx":"15"},{"size":692,"mtime":1699735550808,"results":"16","hashOfConfig":"17"},{"size":587,"mtime":1699715046254,"results":"18","hashOfConfig":"17"},{"size":6596,"mtime":1699794063608,"results":"19","hashOfConfig":"17"},{"size":1363,"mtime":1699739640297,"results":"20","hashOfConfig":"17"},{"size":3906,"mtime":1699707293212,"results":"21","hashOfConfig":"17"},{"size":8798,"mtime":1699707293212,"results":"22","hashOfConfig":"17"},{"size":377,"mtime":1699707293228,"results":"23","hashOfConfig":"17"},{"size":4420,"mtime":1699792693841,"results":"24","hashOfConfig":"17"},{"size":2959,"mtime":1699794446256,"results":"25","hashOfConfig":"17"},{"size":3647,"mtime":1699793957647,"results":"26","hashOfConfig":"17"},{"size":3686,"mtime":1699793957647,"results":"27","hashOfConfig":"17"},{"size":3840,"mtime":1699793770864,"results":"28","hashOfConfig":"17"},{"size":3770,"mtime":1699793957647,"results":"29","hashOfConfig":"17"},{"size":2049,"mtime":1699789684041,"results":"30","hashOfConfig":"17"},{"size":1654,"mtime":1699794273199,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hijzzy",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\index.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\App.tsx",["81","82"],[],"import React, { Component } from 'react';\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport RecentResults from \"./components/results/RecentResults\";\r\nimport \"./index.css\";\r\nimport NavBar from \"./components/navigate/NavBar\";\r\nclass App extends Component<any, { infoOptions: any, selectedOption: any}> {\r\n    render() {\r\n        return (\r\n                <div className={\" w-full h-full flex flex-col justify-center items-center bg-f1-main\"}>\r\n                    <RecentResults/>\r\n                    <Outlet />\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n",["83"],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanel.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectSceleton.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\InfoAPI.tsx",["84","85","86","87","88"],[],"export default class  F1InfoAPI{\r\n\r\n     async Drivers(): Promise<any[]> {\r\n         var listtoreturn: any[]= []\r\n         const result = fetch(\"http://localhost:8080/f1/info/drivers\").then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n                return response.json().then((value) => {\r\n                    return value.MRData.DriverTable.Drivers;\r\n                })\r\n            }).then((resultvalue) =>{\r\n            resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.driverId, label:elem.givenName + \" \" + elem.familyName})\r\n            });\r\n            return listtoreturn\r\n        })\r\n        return result\r\n\r\n    }\r\n\r\n    async Rounds(year: string): Promise<number>{\r\n        var toreturn: number = 0;\r\n         const result = fetch(\"http://localhost:8080/f1/info/rounds?year=\" + year).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value;\r\n            })\r\n        }).then((resultvalue) =>{\r\n                toreturn = resultvalue\r\n                return toreturn\r\n        })\r\n        return result\r\n    }\r\n\r\n    async Constructor(driver: string): Promise<any[]> {\r\n        var listtoreturn: any[]= []\r\n         const result = fetch(\"http://localhost:8080/f1/info/constructors?driver=\"+ driver).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Constructors;\r\n            })\r\n        }).then((resultvalue) =>{\r\n            resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.constructorId, label:elem.name , nation: elem.nationality})\r\n            });\r\n            return listtoreturn\r\n        })\r\n        return result\r\n\r\n    }\r\n\r\n    async ConstructorByDate(year: number): Promise<any[]> {\r\n        var listtoreturn: any[]= []\r\n         const result = fetch(\"/f1/info/bydateconstructors?year=\"+ year).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Constructors;\r\n            })\r\n        }).then((resultvalue) =>{\r\n           resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem.constructorId, label:elem.name , nation: elem.nationality})\r\n           });\r\n           return listtoreturn\r\n\r\n        })\r\n        return result\r\n\r\n    }\r\n\r\n    async YearsList(): Promise<any[]>{\r\n        var listtoreturn: any[] = []\r\n        const result = fetch(\"/f1/info/yearlist\").then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n        }).then((resultvalue) =>{\r\n                resultvalue.map((elem: any)=> {\r\n                    listtoreturn.push({value: elem, label: elem.toString().toLocaleUpperCase()})\r\n                });\r\n                return listtoreturn\r\n        })\r\n        return result\r\n\r\n    }\r\n    async RoundsList(year: string): Promise<any[]>{\r\n        let rounds:number = await this.Rounds(year)\r\n        var listtoreturn: any[] = []\r\n        const result: Promise<any[]> = fetch(\"/f1/info/roundlist?rounds=\" + rounds).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n        }).then((resultvalue) =>{\r\n           resultvalue.map((elem: any)=> {\r\n                listtoreturn.push({value:elem, label:elem.toString().toLocaleUpperCase()})\r\n            });\r\n\r\n           return listtoreturn\r\n        })\r\n        return result\r\n    }\r\n\r\n\r\n};","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\API\\ResultsAPI.tsx",["89","90","91","92","93"],[],"export default class  ResultsAPI{\r\n\r\n    async DataArrayFiller(elem: any, listtoreturn: any[]): Promise<any[]>{\r\n        listtoreturn.push(\r\n                {number: elem.number, position: elem.position, points: elem.points,\r\n                    driver: elem.Driver.givenName + \" \" + elem.Driver.familyName, constructor: elem.Constructor.name,\r\n                    status: elem.status, url: elem.Driver.url,\r\n                    fastesttime: elem.FastestLap.Time.time, averspeed: elem.FastestLap.AverageSpeed.speed\r\n                })\r\n        return listtoreturn\r\n    }\r\n\r\n    async ExceptionDataArrayFiller(elem: any,  listtoreturn: any[]): Promise<any[]>{\r\n        listtoreturn.push(\r\n            {number: elem.number, position: elem.position, points: elem.points,\r\n                driver: elem.Driver.givenName + \" \" + elem.Driver.familyName, constructor: elem.Constructor.name,\r\n                status: elem.status, url: elem.Driver.url\r\n            })\r\n        return listtoreturn\r\n    }\r\n\r\n    async Recent(): Promise<any[]> {\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        const result = fetch(\"/f1/results/recent\").then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.MRData.RaceTable.Races[0];\r\n            })\r\n        }).then((resultvalue) =>{\r\n            season = resultvalue.season\r\n            location = resultvalue.Circuit.Location.locality + \" - \" + resultvalue.Circuit.Location.country\r\n            date = resultvalue.date\r\n            time = resultvalue.time.slice(0, -1)\r\n            resultvalue.Results.map((elem: any)=> {\r\n                if(elem.FastestLap){\r\n                    this.DataArrayFiller(elem, listtoreturn)\r\n                }else{\r\n                    this.ExceptionDataArrayFiller(elem, listtoreturn)\r\n                }\r\n            })\r\n            listtoreturn.push({season: season, location: location, date: date, time: time})\r\n            return listtoreturn\r\n        })\r\n        return result\r\n    }\r\n\r\n    async ResultsByYearAndRound(year: number, round:number){\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        const result = fetch(\"/f1/results/paramresults?year=\" + year + \"&round=\" + round).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Races[0];\r\n            }).then((resultvalue) =>{\r\n                season = resultvalue.season\r\n                location = resultvalue.Circuit.Location.locality + \" - \" + resultvalue.Circuit.Location.country\r\n                date = resultvalue.date\r\n                time = resultvalue.time.slice(0, -1)\r\n                resultvalue.Results.map((elem: any)=> {\r\n                    if(elem.FastestLap){\r\n                        this.DataArrayFiller(elem, listtoreturn)\r\n                    }else{\r\n                        this.ExceptionDataArrayFiller(elem, listtoreturn)\r\n                    }\r\n                })\r\n                listtoreturn.push({season: season, location: location, date: date, time: time})\r\n                return listtoreturn\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    async ResultsByYearAndDriver(year: number, driver:string){\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        const result = fetch(\"/f1/results/driverresult?year=\" + year + \"&driver=\" + driver).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Races;\r\n            }).then((resultvalue) =>{\r\n                resultvalue.map((elem: any, key: number)=> {\r\n                    season = elem.season\r\n                    location = elem.Circuit.Location.locality + \" - \" + elem.Circuit.Location.country\r\n                    date = elem.date\r\n                    time = elem.time.slice(0, -1)\r\n                    console.log(\"elem.Results[0]\", elem.Results[0])\r\n                    if(elem.Results[0].FastestLap){\r\n                        this.DataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }else{\r\n                        this.ExceptionDataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }\r\n                })\r\n                return listtoreturn\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    async ResultsByConstructorAndDriver(constructor: string, driver:string){\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        const result = fetch(\"/f1/results/constructorresult?driver=\" + driver + \"&constructor=\" + constructor).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Races;\r\n            }).then((resultvalue) =>{\r\n                resultvalue.map((elem: any, key: number)=> {\r\n                    season = elem.season\r\n                    location = elem.Circuit.Location.locality + \" - \" + elem.Circuit.Location.country\r\n                    date = elem.date\r\n                    time = elem.time.slice(0, -1)\r\n                    if(elem.Results[0].FastestLap){\r\n                        this.DataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }else{\r\n                        this.ExceptionDataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }\r\n                })\r\n                return listtoreturn\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    async FastestResultsByYearandRound(year: string, round:string){\r\n        var listtoreturn: any[]= []\r\n        var season: string = \"\"\r\n        var location: string = \"\"\r\n        var date: string = \"\"\r\n        var time: string = \"\"\r\n        const result = fetch(\"/f1/results/fastestresult?year=\" + year + \"&round=\" + round).then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(response.statusText)\r\n            }\r\n            return response.json().then((value) => {\r\n                return value.Races;\r\n            }).then((resultvalue) =>{\r\n                resultvalue.map((elem: any, key: number)=> {\r\n                    season = elem.season\r\n                    location = elem.Circuit.Location.locality + \" - \" + elem.Circuit.Location.country\r\n                    date = elem.date\r\n                    time = elem.time.slice(0, -1)\r\n                    if(elem.Results[0].FastestLap){\r\n                        this.DataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }else{\r\n                        this.ExceptionDataArrayFiller(elem.Results[0], listtoreturn)\r\n                        listtoreturn[key].season= season\r\n                        listtoreturn[key].location= location\r\n                        listtoreturn[key].date= date\r\n                        listtoreturn[key].time= time\r\n                    }\r\n                })\r\n                return listtoreturn\r\n            })\r\n        })\r\n        return result\r\n    }\r\n};","C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\loader\\Loader.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\select\\SelectPanelPage.tsx",[],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\RecentResults.tsx",["94","95"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\YearRoundResults.tsx",["96","97","98"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\YearDriverResults.tsx",["99","100","101"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\ConstructorDriverResults.tsx",["102","103","104","105"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\results\\FastestResult.tsx",["106","107","108"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\navigate\\NavBar.tsx",["109"],[],"C:\\Users\\User\\IdeaProjects\\F1TrackerServer\\f1trackerfrontend\\src\\components\\buttons\\ButtonsPanel.tsx",[],[],{"ruleId":"110","severity":1,"message":"111","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":13,"column":40,"nodeType":"119","messageId":"120","endLine":13,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":48,"column":40,"nodeType":"119","messageId":"120","endLine":48,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":67,"column":39,"nodeType":"119","messageId":"120","endLine":67,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":85,"column":44,"nodeType":"119","messageId":"120","endLine":85,"endColumn":46},{"ruleId":"117","severity":1,"message":"118","line":102,"column":39,"nodeType":"119","messageId":"120","endLine":102,"endColumn":41},{"ruleId":"117","severity":1,"message":"118","line":40,"column":48,"nodeType":"119","messageId":"120","endLine":40,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":70,"column":52,"nodeType":"119","messageId":"120","endLine":70,"endColumn":54},{"ruleId":"117","severity":1,"message":"118","line":97,"column":57,"nodeType":"119","messageId":"120","endLine":97,"endColumn":59},{"ruleId":"117","severity":1,"message":"118","line":136,"column":57,"nodeType":"119","messageId":"120","endLine":136,"endColumn":59},{"ruleId":"117","severity":1,"message":"118","line":174,"column":57,"nodeType":"119","messageId":"120","endLine":174,"endColumn":59},{"ruleId":"110","severity":1,"message":"114","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":44,"column":29,"nodeType":"123","messageId":"124","endLine":44,"endColumn":140,"fix":"125"},{"ruleId":"126","severity":1,"message":"127","line":36,"column":28,"nodeType":"128","messageId":"129","endLine":36,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":36,"column":67,"nodeType":"128","messageId":"129","endLine":36,"endColumn":69},{"ruleId":"121","severity":1,"message":"122","line":62,"column":33,"nodeType":"123","messageId":"124","endLine":62,"endColumn":144,"fix":"130"},{"ruleId":"126","severity":1,"message":"127","line":35,"column":28,"nodeType":"128","messageId":"129","endLine":35,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":35,"column":68,"nodeType":"128","messageId":"129","endLine":35,"endColumn":70},{"ruleId":"121","severity":1,"message":"122","line":62,"column":33,"nodeType":"123","messageId":"124","endLine":62,"endColumn":144,"fix":"131"},{"ruleId":"110","severity":1,"message":"132","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":36,"column":30,"nodeType":"128","messageId":"129","endLine":36,"endColumn":32},{"ruleId":"126","severity":1,"message":"127","line":36,"column":77,"nodeType":"128","messageId":"129","endLine":36,"endColumn":79},{"ruleId":"121","severity":1,"message":"122","line":63,"column":33,"nodeType":"123","messageId":"124","endLine":63,"endColumn":144,"fix":"133"},{"ruleId":"126","severity":1,"message":"127","line":36,"column":28,"nodeType":"128","messageId":"129","endLine":36,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":36,"column":67,"nodeType":"128","messageId":"129","endLine":36,"endColumn":69},{"ruleId":"121","severity":1,"message":"122","line":63,"column":33,"nodeType":"123","messageId":"124","endLine":63,"endColumn":144,"fix":"134"},{"ruleId":"110","severity":1,"message":"135","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":20},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","no-new-object",["136"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"137","text":"138"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"139","text":"138"},{"range":"140","text":"138"},"'F1InfoAPI' is defined but never used.",{"range":"141","text":"138"},{"range":"142","text":"138"},"'ButtonsPanel' is defined but never used.","no-object-constructor",[2108,2108]," rel=\"noreferrer\"",[2733,2733],[2771,2771],[2918,2918],[2796,2796]]